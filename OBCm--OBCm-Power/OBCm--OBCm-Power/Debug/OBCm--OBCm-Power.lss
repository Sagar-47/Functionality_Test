
OBCm--OBCm-Power.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000060  00800100  000004e0  00000554  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004e0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000005b4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005e4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000130  00000000  00000000  00000624  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000180a  00000000  00000000  00000754  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000ae8  00000000  00000000  00001f5e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000bd3  00000000  00000000  00002a46  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000022c  00000000  00000000  0000361c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000060b  00000000  00000000  00003848  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b30  00000000  00000000  00003e53  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000f0  00000000  00000000  00004983  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 ee       	ldi	r30, 0xE0	; 224
  a0:	f4 e0       	ldi	r31, 0x04	; 4
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 36       	cpi	r26, 0x60	; 96
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	d6 d1       	rcall	.+940    	; 0x460 <main>
  b4:	13 c2       	rjmp	.+1062   	; 0x4dc <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <TWI_init_master>:
{
	char recv_data;
	TWCR=(1<<TWINT)|(1<<TWEN);    // Clear TWI interrupt flag,Enable TWI
	while (!(TWCR & (1<<TWINT))); // Wait till complete TWDR byte transmitted
	while((TWSR & 0xF8) != 0x58); // Check for the acknoledgement
	recv_data=TWDR;//PORTA=recv_data;
  b8:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
  bc:	10 92 74 00 	sts	0x0074, r1	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
  c0:	8c e0       	ldi	r24, 0x0C	; 12
  c2:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
  c6:	08 95       	ret

000000c8 <TWI_start>:
  c8:	e4 e7       	ldi	r30, 0x74	; 116
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	94 ea       	ldi	r25, 0xA4	; 164
  ce:	a1 e7       	ldi	r26, 0x71	; 113
  d0:	b0 e0       	ldi	r27, 0x00	; 0
  d2:	90 83       	st	Z, r25
  d4:	80 81       	ld	r24, Z
  d6:	88 23       	and	r24, r24
  d8:	ec f7       	brge	.-6      	; 0xd4 <TWI_start+0xc>
  da:	8c 91       	ld	r24, X
  dc:	88 7f       	andi	r24, 0xF8	; 248
  de:	88 30       	cpi	r24, 0x08	; 8
  e0:	c1 f7       	brne	.-16     	; 0xd2 <TWI_start+0xa>
  e2:	08 95       	ret

000000e4 <TWI_write_address>:
  e4:	cf 93       	push	r28
  e6:	df 93       	push	r29
  e8:	c3 e7       	ldi	r28, 0x73	; 115
  ea:	d0 e0       	ldi	r29, 0x00	; 0
  ec:	e4 e7       	ldi	r30, 0x74	; 116
  ee:	f0 e0       	ldi	r31, 0x00	; 0
  f0:	24 e8       	ldi	r18, 0x84	; 132
  f2:	a1 e7       	ldi	r26, 0x71	; 113
  f4:	b0 e0       	ldi	r27, 0x00	; 0
  f6:	88 83       	st	Y, r24
  f8:	20 83       	st	Z, r18
  fa:	04 c0       	rjmp	.+8      	; 0x104 <TWI_write_address+0x20>
  fc:	9c 91       	ld	r25, X
  fe:	98 7f       	andi	r25, 0xF8	; 248
 100:	98 31       	cpi	r25, 0x18	; 24
 102:	c9 f7       	brne	.-14     	; 0xf6 <TWI_write_address+0x12>
 104:	90 81       	ld	r25, Z
 106:	99 23       	and	r25, r25
 108:	cc f7       	brge	.-14     	; 0xfc <TWI_write_address+0x18>
 10a:	df 91       	pop	r29
 10c:	cf 91       	pop	r28
 10e:	08 95       	ret

00000110 <TWI_write_data>:
 110:	cf 93       	push	r28
 112:	df 93       	push	r29
 114:	c3 e7       	ldi	r28, 0x73	; 115
 116:	d0 e0       	ldi	r29, 0x00	; 0
 118:	e4 e7       	ldi	r30, 0x74	; 116
 11a:	f0 e0       	ldi	r31, 0x00	; 0
 11c:	24 e8       	ldi	r18, 0x84	; 132
 11e:	a1 e7       	ldi	r26, 0x71	; 113
 120:	b0 e0       	ldi	r27, 0x00	; 0
 122:	88 83       	st	Y, r24
 124:	20 83       	st	Z, r18
 126:	90 81       	ld	r25, Z
 128:	99 23       	and	r25, r25
 12a:	ec f7       	brge	.-6      	; 0x126 <TWI_write_data+0x16>
 12c:	9c 91       	ld	r25, X
 12e:	98 7f       	andi	r25, 0xF8	; 248
 130:	98 32       	cpi	r25, 0x28	; 40
 132:	b9 f7       	brne	.-18     	; 0x122 <TWI_write_data+0x12>
 134:	df 91       	pop	r29
 136:	cf 91       	pop	r28
 138:	08 95       	ret

0000013a <TWI_stop>:
}

void TWI_stop(void)//Function to stop data transmission
{
	// Clear TWI interrupt flag, Put stop condition on SDA, Enable TWI
	TWCR= (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
 13a:	84 e9       	ldi	r24, 0x94	; 148
 13c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while(!(TWCR & (1<<TWSTO)));  // Wait till stop condition is transmitted
 140:	e4 e7       	ldi	r30, 0x74	; 116
 142:	f0 e0       	ldi	r31, 0x00	; 0
 144:	80 81       	ld	r24, Z
 146:	84 ff       	sbrs	r24, 4
 148:	fd cf       	rjmp	.-6      	; 0x144 <TWI_stop+0xa>
}
 14a:	08 95       	ret

0000014c <led_test_m_config>:
#include "common.h"
#include "led_tests.h"
#include "uart.h"

void led_test_m_config(void)
{
 14c:	cf 93       	push	r28
 14e:	df 93       	push	r29
	DDRA=0x0F;
 150:	cf e0       	ldi	r28, 0x0F	; 15
 152:	ca bb       	out	0x1a, r28	; 26
	
	transmit_string_UART0("_a_");
 154:	80 e0       	ldi	r24, 0x00	; 0
 156:	91 e0       	ldi	r25, 0x01	; 1
 158:	b5 d1       	rcall	.+874    	; 0x4c4 <transmit_string_UART0>
		
	PORTA = 0x0F;
 15a:	cb bb       	out	0x1b, r28	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 15c:	2f ef       	ldi	r18, 0xFF	; 255
 15e:	81 ee       	ldi	r24, 0xE1	; 225
 160:	94 e0       	ldi	r25, 0x04	; 4
 162:	21 50       	subi	r18, 0x01	; 1
 164:	80 40       	sbci	r24, 0x00	; 0
 166:	90 40       	sbci	r25, 0x00	; 0
 168:	e1 f7       	brne	.-8      	; 0x162 <led_test_m_config+0x16>
 16a:	00 c0       	rjmp	.+0      	; 0x16c <led_test_m_config+0x20>
 16c:	00 00       	nop
	_delay_ms(200);
	PORTA = 0xF0;
 16e:	d0 ef       	ldi	r29, 0xF0	; 240
 170:	db bb       	out	0x1b, r29	; 27
 172:	2f ef       	ldi	r18, 0xFF	; 255
 174:	81 ee       	ldi	r24, 0xE1	; 225
 176:	94 e0       	ldi	r25, 0x04	; 4
 178:	21 50       	subi	r18, 0x01	; 1
 17a:	80 40       	sbci	r24, 0x00	; 0
 17c:	90 40       	sbci	r25, 0x00	; 0
 17e:	e1 f7       	brne	.-8      	; 0x178 <led_test_m_config+0x2c>
 180:	00 c0       	rjmp	.+0      	; 0x182 <led_test_m_config+0x36>
 182:	00 00       	nop
	_delay_ms(200);

	transmit_string_UART0("_b_");
 184:	84 e0       	ldi	r24, 0x04	; 4
 186:	91 e0       	ldi	r25, 0x01	; 1
 188:	9d d1       	rcall	.+826    	; 0x4c4 <transmit_string_UART0>
		
	PORTA = 0x0F;
 18a:	cb bb       	out	0x1b, r28	; 27
 18c:	2f ef       	ldi	r18, 0xFF	; 255
 18e:	81 ee       	ldi	r24, 0xE1	; 225
 190:	94 e0       	ldi	r25, 0x04	; 4
 192:	21 50       	subi	r18, 0x01	; 1
 194:	80 40       	sbci	r24, 0x00	; 0
 196:	90 40       	sbci	r25, 0x00	; 0
 198:	e1 f7       	brne	.-8      	; 0x192 <led_test_m_config+0x46>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <led_test_m_config+0x50>
 19c:	00 00       	nop
	_delay_ms(200);
	PORTA = 0xF0;
 19e:	db bb       	out	0x1b, r29	; 27
 1a0:	2f ef       	ldi	r18, 0xFF	; 255
 1a2:	81 ee       	ldi	r24, 0xE1	; 225
 1a4:	94 e0       	ldi	r25, 0x04	; 4
 1a6:	21 50       	subi	r18, 0x01	; 1
 1a8:	80 40       	sbci	r24, 0x00	; 0
 1aa:	90 40       	sbci	r25, 0x00	; 0
 1ac:	e1 f7       	brne	.-8      	; 0x1a6 <led_test_m_config+0x5a>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <led_test_m_config+0x64>
	_delay_ms(200);
	
	transmit_string_UART0("_c_");
 1b0:	00 00       	nop
 1b2:	88 e0       	ldi	r24, 0x08	; 8
 1b4:	91 e0       	ldi	r25, 0x01	; 1
	
	PORTA = 0x0F;
 1b6:	86 d1       	rcall	.+780    	; 0x4c4 <transmit_string_UART0>
 1b8:	cb bb       	out	0x1b, r28	; 27
 1ba:	2f ef       	ldi	r18, 0xFF	; 255
 1bc:	81 ee       	ldi	r24, 0xE1	; 225
 1be:	94 e0       	ldi	r25, 0x04	; 4
 1c0:	21 50       	subi	r18, 0x01	; 1
 1c2:	80 40       	sbci	r24, 0x00	; 0
 1c4:	90 40       	sbci	r25, 0x00	; 0
 1c6:	e1 f7       	brne	.-8      	; 0x1c0 <led_test_m_config+0x74>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <led_test_m_config+0x7e>
	_delay_ms(200);
	PORTA = 0xF0;
 1ca:	00 00       	nop
 1cc:	db bb       	out	0x1b, r29	; 27
 1ce:	2f ef       	ldi	r18, 0xFF	; 255
 1d0:	81 ee       	ldi	r24, 0xE1	; 225
 1d2:	94 e0       	ldi	r25, 0x04	; 4
 1d4:	21 50       	subi	r18, 0x01	; 1
 1d6:	80 40       	sbci	r24, 0x00	; 0
 1d8:	90 40       	sbci	r25, 0x00	; 0
 1da:	e1 f7       	brne	.-8      	; 0x1d4 <led_test_m_config+0x88>
	_delay_ms(200);
	
	transmit_string_UART0("_d_");
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <led_test_m_config+0x92>
 1de:	00 00       	nop
 1e0:	8c e0       	ldi	r24, 0x0C	; 12
 1e2:	91 e0       	ldi	r25, 0x01	; 1
	
	PORTA = 0x0F;
 1e4:	6f d1       	rcall	.+734    	; 0x4c4 <transmit_string_UART0>
 1e6:	cb bb       	out	0x1b, r28	; 27
 1e8:	2f ef       	ldi	r18, 0xFF	; 255
 1ea:	81 ee       	ldi	r24, 0xE1	; 225
 1ec:	94 e0       	ldi	r25, 0x04	; 4
 1ee:	21 50       	subi	r18, 0x01	; 1
 1f0:	80 40       	sbci	r24, 0x00	; 0
 1f2:	90 40       	sbci	r25, 0x00	; 0
 1f4:	e1 f7       	brne	.-8      	; 0x1ee <led_test_m_config+0xa2>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <led_test_m_config+0xac>
	_delay_ms(200);
	PORTA = 0xF0;
 1f8:	00 00       	nop
 1fa:	db bb       	out	0x1b, r29	; 27
 1fc:	2f ef       	ldi	r18, 0xFF	; 255
 1fe:	81 ee       	ldi	r24, 0xE1	; 225
 200:	94 e0       	ldi	r25, 0x04	; 4
 202:	21 50       	subi	r18, 0x01	; 1
 204:	80 40       	sbci	r24, 0x00	; 0
 206:	90 40       	sbci	r25, 0x00	; 0
 208:	e1 f7       	brne	.-8      	; 0x202 <led_test_m_config+0xb6>
	_delay_ms(200);
	
	transmit_string_UART0("_e_");
 20a:	00 c0       	rjmp	.+0      	; 0x20c <led_test_m_config+0xc0>
 20c:	00 00       	nop
 20e:	80 e1       	ldi	r24, 0x10	; 16
 210:	91 e0       	ldi	r25, 0x01	; 1
	
	PORTA = 0x0F;
 212:	58 d1       	rcall	.+688    	; 0x4c4 <transmit_string_UART0>
 214:	cb bb       	out	0x1b, r28	; 27
 216:	2f ef       	ldi	r18, 0xFF	; 255
 218:	81 ee       	ldi	r24, 0xE1	; 225
 21a:	94 e0       	ldi	r25, 0x04	; 4
 21c:	21 50       	subi	r18, 0x01	; 1
 21e:	80 40       	sbci	r24, 0x00	; 0
 220:	90 40       	sbci	r25, 0x00	; 0
 222:	e1 f7       	brne	.-8      	; 0x21c <led_test_m_config+0xd0>
 224:	00 c0       	rjmp	.+0      	; 0x226 <led_test_m_config+0xda>
	_delay_ms(200);
	PORTA = 0xF0;
 226:	00 00       	nop
 228:	db bb       	out	0x1b, r29	; 27
 22a:	2f ef       	ldi	r18, 0xFF	; 255
 22c:	81 ee       	ldi	r24, 0xE1	; 225
 22e:	94 e0       	ldi	r25, 0x04	; 4
 230:	21 50       	subi	r18, 0x01	; 1
 232:	80 40       	sbci	r24, 0x00	; 0
 234:	90 40       	sbci	r25, 0x00	; 0
 236:	e1 f7       	brne	.-8      	; 0x230 <led_test_m_config+0xe4>
	_delay_ms(200);
	
	transmit_string_UART0("_f_");
 238:	00 c0       	rjmp	.+0      	; 0x23a <led_test_m_config+0xee>
 23a:	00 00       	nop
 23c:	84 e1       	ldi	r24, 0x14	; 20
 23e:	91 e0       	ldi	r25, 0x01	; 1
	
	PORTA = 0x0F;
 240:	41 d1       	rcall	.+642    	; 0x4c4 <transmit_string_UART0>
 242:	cb bb       	out	0x1b, r28	; 27
 244:	2f ef       	ldi	r18, 0xFF	; 255
 246:	81 ee       	ldi	r24, 0xE1	; 225
 248:	94 e0       	ldi	r25, 0x04	; 4
 24a:	21 50       	subi	r18, 0x01	; 1
 24c:	80 40       	sbci	r24, 0x00	; 0
 24e:	90 40       	sbci	r25, 0x00	; 0
 250:	e1 f7       	brne	.-8      	; 0x24a <led_test_m_config+0xfe>
 252:	00 c0       	rjmp	.+0      	; 0x254 <led_test_m_config+0x108>
	_delay_ms(200);
	PORTA = 0xF0;
 254:	00 00       	nop
 256:	db bb       	out	0x1b, r29	; 27
 258:	2f ef       	ldi	r18, 0xFF	; 255
 25a:	81 ee       	ldi	r24, 0xE1	; 225
 25c:	94 e0       	ldi	r25, 0x04	; 4
 25e:	21 50       	subi	r18, 0x01	; 1
 260:	80 40       	sbci	r24, 0x00	; 0
 262:	90 40       	sbci	r25, 0x00	; 0
 264:	e1 f7       	brne	.-8      	; 0x25e <led_test_m_config+0x112>
	_delay_ms(200);
	
	transmit_string_UART0("_g_");
 266:	00 c0       	rjmp	.+0      	; 0x268 <led_test_m_config+0x11c>
 268:	00 00       	nop
 26a:	88 e1       	ldi	r24, 0x18	; 24
 26c:	91 e0       	ldi	r25, 0x01	; 1
	
	PORTA = 0x0F;
 26e:	2a d1       	rcall	.+596    	; 0x4c4 <transmit_string_UART0>
 270:	cb bb       	out	0x1b, r28	; 27
 272:	2f ef       	ldi	r18, 0xFF	; 255
 274:	81 ee       	ldi	r24, 0xE1	; 225
 276:	94 e0       	ldi	r25, 0x04	; 4
 278:	21 50       	subi	r18, 0x01	; 1
 27a:	80 40       	sbci	r24, 0x00	; 0
 27c:	90 40       	sbci	r25, 0x00	; 0
 27e:	e1 f7       	brne	.-8      	; 0x278 <led_test_m_config+0x12c>
 280:	00 c0       	rjmp	.+0      	; 0x282 <led_test_m_config+0x136>
	_delay_ms(200);
	PORTA = 0xF0;
 282:	00 00       	nop
 284:	db bb       	out	0x1b, r29	; 27
 286:	2f ef       	ldi	r18, 0xFF	; 255
 288:	81 ee       	ldi	r24, 0xE1	; 225
 28a:	94 e0       	ldi	r25, 0x04	; 4
 28c:	21 50       	subi	r18, 0x01	; 1
 28e:	80 40       	sbci	r24, 0x00	; 0
 290:	90 40       	sbci	r25, 0x00	; 0
 292:	e1 f7       	brne	.-8      	; 0x28c <led_test_m_config+0x140>
	_delay_ms(200);
	
	transmit_string_UART0("_h_");
 294:	00 c0       	rjmp	.+0      	; 0x296 <led_test_m_config+0x14a>
 296:	00 00       	nop
 298:	8c e1       	ldi	r24, 0x1C	; 28
 29a:	91 e0       	ldi	r25, 0x01	; 1
	
	PORTA = 0x0F;
 29c:	13 d1       	rcall	.+550    	; 0x4c4 <transmit_string_UART0>
 29e:	cb bb       	out	0x1b, r28	; 27
 2a0:	2f ef       	ldi	r18, 0xFF	; 255
 2a2:	81 ee       	ldi	r24, 0xE1	; 225
 2a4:	94 e0       	ldi	r25, 0x04	; 4
 2a6:	21 50       	subi	r18, 0x01	; 1
 2a8:	80 40       	sbci	r24, 0x00	; 0
 2aa:	90 40       	sbci	r25, 0x00	; 0
 2ac:	e1 f7       	brne	.-8      	; 0x2a6 <led_test_m_config+0x15a>
 2ae:	00 c0       	rjmp	.+0      	; 0x2b0 <led_test_m_config+0x164>
	_delay_ms(200);
	PORTA = 0xF0;
 2b0:	00 00       	nop
 2b2:	db bb       	out	0x1b, r29	; 27
 2b4:	2f ef       	ldi	r18, 0xFF	; 255
 2b6:	81 ee       	ldi	r24, 0xE1	; 225
 2b8:	94 e0       	ldi	r25, 0x04	; 4
 2ba:	21 50       	subi	r18, 0x01	; 1
 2bc:	80 40       	sbci	r24, 0x00	; 0
 2be:	90 40       	sbci	r25, 0x00	; 0
 2c0:	e1 f7       	brne	.-8      	; 0x2ba <led_test_m_config+0x16e>
 2c2:	00 c0       	rjmp	.+0      	; 0x2c4 <led_test_m_config+0x178>
	_delay_ms(200);
	
	
	PORTA = 0x00; 
 2c4:	00 00       	nop
 2c6:	1b ba       	out	0x1b, r1	; 27
 2c8:	2f ef       	ldi	r18, 0xFF	; 255
 2ca:	81 ee       	ldi	r24, 0xE1	; 225
 2cc:	94 e0       	ldi	r25, 0x04	; 4
 2ce:	21 50       	subi	r18, 0x01	; 1
 2d0:	80 40       	sbci	r24, 0x00	; 0
 2d2:	90 40       	sbci	r25, 0x00	; 0
 2d4:	e1 f7       	brne	.-8      	; 0x2ce <led_test_m_config+0x182>
 2d6:	00 c0       	rjmp	.+0      	; 0x2d8 <led_test_m_config+0x18c>
	_delay_ms(200);
	
}
 2d8:	00 00       	nop
 2da:	df 91       	pop	r29
 2dc:	cf 91       	pop	r28
 2de:	08 95       	ret

000002e0 <led_test_m_a>:

void led_test_m_a(void)
{
	PORTA |= 0b10000000;
 2e0:	df 9a       	sbi	0x1b, 7	; 27
	transmit_string_UART0(" led_a ");
 2e2:	80 e2       	ldi	r24, 0x20	; 32
 2e4:	91 e0       	ldi	r25, 0x01	; 1
 2e6:	ee d0       	rcall	.+476    	; 0x4c4 <transmit_string_UART0>
 2e8:	2f ef       	ldi	r18, 0xFF	; 255
 2ea:	81 ee       	ldi	r24, 0xE1	; 225
 2ec:	94 e0       	ldi	r25, 0x04	; 4
 2ee:	21 50       	subi	r18, 0x01	; 1
 2f0:	80 40       	sbci	r24, 0x00	; 0
 2f2:	90 40       	sbci	r25, 0x00	; 0
 2f4:	e1 f7       	brne	.-8      	; 0x2ee <led_test_m_a+0xe>
 2f6:	00 c0       	rjmp	.+0      	; 0x2f8 <led_test_m_a+0x18>
 2f8:	00 00       	nop
	_delay_ms(200);
	PORTA &= 0b01111111;
 2fa:	df 98       	cbi	0x1b, 7	; 27
 2fc:	2f ef       	ldi	r18, 0xFF	; 255
 2fe:	81 ee       	ldi	r24, 0xE1	; 225
 300:	94 e0       	ldi	r25, 0x04	; 4
 302:	21 50       	subi	r18, 0x01	; 1
 304:	80 40       	sbci	r24, 0x00	; 0
 306:	90 40       	sbci	r25, 0x00	; 0
 308:	e1 f7       	brne	.-8      	; 0x302 <led_test_m_a+0x22>
 30a:	00 c0       	rjmp	.+0      	; 0x30c <led_test_m_a+0x2c>
 30c:	00 00       	nop
 30e:	08 95       	ret

00000310 <led_test_m_b>:
	_delay_ms(200);
}

void led_test_m_b(void)
{
	PORTA |= 0b01000000;
 310:	de 9a       	sbi	0x1b, 6	; 27
	transmit_string_UART0(" led_b ");
 312:	88 e2       	ldi	r24, 0x28	; 40
 314:	91 e0       	ldi	r25, 0x01	; 1
 316:	d6 d0       	rcall	.+428    	; 0x4c4 <transmit_string_UART0>
 318:	2f ef       	ldi	r18, 0xFF	; 255
 31a:	81 ee       	ldi	r24, 0xE1	; 225
 31c:	94 e0       	ldi	r25, 0x04	; 4
 31e:	21 50       	subi	r18, 0x01	; 1
 320:	80 40       	sbci	r24, 0x00	; 0
 322:	90 40       	sbci	r25, 0x00	; 0
 324:	e1 f7       	brne	.-8      	; 0x31e <led_test_m_b+0xe>
 326:	00 c0       	rjmp	.+0      	; 0x328 <led_test_m_b+0x18>
 328:	00 00       	nop
	_delay_ms(200);
	PORTA &= 0b10111111;
 32a:	de 98       	cbi	0x1b, 6	; 27
 32c:	2f ef       	ldi	r18, 0xFF	; 255
 32e:	81 ee       	ldi	r24, 0xE1	; 225
 330:	94 e0       	ldi	r25, 0x04	; 4
 332:	21 50       	subi	r18, 0x01	; 1
 334:	80 40       	sbci	r24, 0x00	; 0
 336:	90 40       	sbci	r25, 0x00	; 0
 338:	e1 f7       	brne	.-8      	; 0x332 <led_test_m_b+0x22>
 33a:	00 c0       	rjmp	.+0      	; 0x33c <led_test_m_b+0x2c>
 33c:	00 00       	nop
 33e:	08 95       	ret

00000340 <led_test_m_c>:
	_delay_ms(200);
}

void led_test_m_c(void)
{
	PORTA |= 0b00100000;
 340:	dd 9a       	sbi	0x1b, 5	; 27
	transmit_string_UART0(" led_c ");
 342:	80 e3       	ldi	r24, 0x30	; 48
 344:	91 e0       	ldi	r25, 0x01	; 1
 346:	be d0       	rcall	.+380    	; 0x4c4 <transmit_string_UART0>
 348:	2f ef       	ldi	r18, 0xFF	; 255
 34a:	81 ee       	ldi	r24, 0xE1	; 225
 34c:	94 e0       	ldi	r25, 0x04	; 4
 34e:	21 50       	subi	r18, 0x01	; 1
 350:	80 40       	sbci	r24, 0x00	; 0
 352:	90 40       	sbci	r25, 0x00	; 0
 354:	e1 f7       	brne	.-8      	; 0x34e <led_test_m_c+0xe>
 356:	00 c0       	rjmp	.+0      	; 0x358 <led_test_m_c+0x18>
 358:	00 00       	nop
	_delay_ms(200);
	PORTA &= 0b11011111;
 35a:	dd 98       	cbi	0x1b, 5	; 27
 35c:	2f ef       	ldi	r18, 0xFF	; 255
 35e:	81 ee       	ldi	r24, 0xE1	; 225
 360:	94 e0       	ldi	r25, 0x04	; 4
 362:	21 50       	subi	r18, 0x01	; 1
 364:	80 40       	sbci	r24, 0x00	; 0
 366:	90 40       	sbci	r25, 0x00	; 0
 368:	e1 f7       	brne	.-8      	; 0x362 <led_test_m_c+0x22>
 36a:	00 c0       	rjmp	.+0      	; 0x36c <led_test_m_c+0x2c>
 36c:	00 00       	nop
 36e:	08 95       	ret

00000370 <led_test_m_d>:
	_delay_ms(200);
}

void led_test_m_d(void)
{
	PORTA |= 0b00010000;
 370:	dc 9a       	sbi	0x1b, 4	; 27
	transmit_string_UART0(" led_d ");
 372:	88 e3       	ldi	r24, 0x38	; 56
 374:	91 e0       	ldi	r25, 0x01	; 1
 376:	a6 d0       	rcall	.+332    	; 0x4c4 <transmit_string_UART0>
 378:	2f ef       	ldi	r18, 0xFF	; 255
 37a:	81 ee       	ldi	r24, 0xE1	; 225
 37c:	94 e0       	ldi	r25, 0x04	; 4
 37e:	21 50       	subi	r18, 0x01	; 1
 380:	80 40       	sbci	r24, 0x00	; 0
 382:	90 40       	sbci	r25, 0x00	; 0
 384:	e1 f7       	brne	.-8      	; 0x37e <led_test_m_d+0xe>
 386:	00 c0       	rjmp	.+0      	; 0x388 <led_test_m_d+0x18>
 388:	00 00       	nop
	_delay_ms(200);
	PORTA &= 0b11101111;
 38a:	dc 98       	cbi	0x1b, 4	; 27
 38c:	2f ef       	ldi	r18, 0xFF	; 255
 38e:	81 ee       	ldi	r24, 0xE1	; 225
 390:	94 e0       	ldi	r25, 0x04	; 4
 392:	21 50       	subi	r18, 0x01	; 1
 394:	80 40       	sbci	r24, 0x00	; 0
 396:	90 40       	sbci	r25, 0x00	; 0
 398:	e1 f7       	brne	.-8      	; 0x392 <led_test_m_d+0x22>
 39a:	00 c0       	rjmp	.+0      	; 0x39c <led_test_m_d+0x2c>
 39c:	00 00       	nop
 39e:	08 95       	ret

000003a0 <led_test_m_e>:
}


void led_test_m_e(void)
{
	PORTA |= 0b00001000;
 3a0:	db 9a       	sbi	0x1b, 3	; 27
	transmit_string_UART0(" led_e ");
 3a2:	80 e4       	ldi	r24, 0x40	; 64
 3a4:	91 e0       	ldi	r25, 0x01	; 1
 3a6:	8e d0       	rcall	.+284    	; 0x4c4 <transmit_string_UART0>
 3a8:	2f ef       	ldi	r18, 0xFF	; 255
 3aa:	81 ee       	ldi	r24, 0xE1	; 225
 3ac:	94 e0       	ldi	r25, 0x04	; 4
 3ae:	21 50       	subi	r18, 0x01	; 1
 3b0:	80 40       	sbci	r24, 0x00	; 0
 3b2:	90 40       	sbci	r25, 0x00	; 0
 3b4:	e1 f7       	brne	.-8      	; 0x3ae <led_test_m_e+0xe>
 3b6:	00 c0       	rjmp	.+0      	; 0x3b8 <led_test_m_e+0x18>
 3b8:	00 00       	nop
	_delay_ms(200);
	PORTA &= 0b11110111;
 3ba:	db 98       	cbi	0x1b, 3	; 27
 3bc:	2f ef       	ldi	r18, 0xFF	; 255
 3be:	81 ee       	ldi	r24, 0xE1	; 225
 3c0:	94 e0       	ldi	r25, 0x04	; 4
 3c2:	21 50       	subi	r18, 0x01	; 1
 3c4:	80 40       	sbci	r24, 0x00	; 0
 3c6:	90 40       	sbci	r25, 0x00	; 0
 3c8:	e1 f7       	brne	.-8      	; 0x3c2 <led_test_m_e+0x22>
 3ca:	00 c0       	rjmp	.+0      	; 0x3cc <led_test_m_e+0x2c>
 3cc:	00 00       	nop
 3ce:	08 95       	ret

000003d0 <led_test_m_f>:
}


void led_test_m_f(void)
{
	PORTA |= 0b00000100;
 3d0:	da 9a       	sbi	0x1b, 2	; 27
	transmit_string_UART0(" led_f ");
 3d2:	88 e4       	ldi	r24, 0x48	; 72
 3d4:	91 e0       	ldi	r25, 0x01	; 1
 3d6:	76 d0       	rcall	.+236    	; 0x4c4 <transmit_string_UART0>
 3d8:	2f ef       	ldi	r18, 0xFF	; 255
 3da:	81 ee       	ldi	r24, 0xE1	; 225
 3dc:	94 e0       	ldi	r25, 0x04	; 4
 3de:	21 50       	subi	r18, 0x01	; 1
 3e0:	80 40       	sbci	r24, 0x00	; 0
 3e2:	90 40       	sbci	r25, 0x00	; 0
 3e4:	e1 f7       	brne	.-8      	; 0x3de <led_test_m_f+0xe>
 3e6:	00 c0       	rjmp	.+0      	; 0x3e8 <led_test_m_f+0x18>
 3e8:	00 00       	nop
	_delay_ms(200);
	PORTA &= 0b11111011;
 3ea:	da 98       	cbi	0x1b, 2	; 27
 3ec:	2f ef       	ldi	r18, 0xFF	; 255
 3ee:	81 ee       	ldi	r24, 0xE1	; 225
 3f0:	94 e0       	ldi	r25, 0x04	; 4
 3f2:	21 50       	subi	r18, 0x01	; 1
 3f4:	80 40       	sbci	r24, 0x00	; 0
 3f6:	90 40       	sbci	r25, 0x00	; 0
 3f8:	e1 f7       	brne	.-8      	; 0x3f2 <led_test_m_f+0x22>
 3fa:	00 c0       	rjmp	.+0      	; 0x3fc <led_test_m_f+0x2c>
 3fc:	00 00       	nop
 3fe:	08 95       	ret

00000400 <led_test_m_g>:
}


void led_test_m_g(void)
{
	PORTA |= 0b00000010;
 400:	d9 9a       	sbi	0x1b, 1	; 27
	transmit_string_UART0(" led_g ");
 402:	80 e5       	ldi	r24, 0x50	; 80
 404:	91 e0       	ldi	r25, 0x01	; 1
 406:	5e d0       	rcall	.+188    	; 0x4c4 <transmit_string_UART0>
 408:	2f ef       	ldi	r18, 0xFF	; 255
 40a:	81 ee       	ldi	r24, 0xE1	; 225
 40c:	94 e0       	ldi	r25, 0x04	; 4
 40e:	21 50       	subi	r18, 0x01	; 1
 410:	80 40       	sbci	r24, 0x00	; 0
 412:	90 40       	sbci	r25, 0x00	; 0
 414:	e1 f7       	brne	.-8      	; 0x40e <led_test_m_g+0xe>
 416:	00 c0       	rjmp	.+0      	; 0x418 <led_test_m_g+0x18>
 418:	00 00       	nop
	_delay_ms(200);
	PORTA &= 0b11111101;
 41a:	d9 98       	cbi	0x1b, 1	; 27
 41c:	2f ef       	ldi	r18, 0xFF	; 255
 41e:	81 ee       	ldi	r24, 0xE1	; 225
 420:	94 e0       	ldi	r25, 0x04	; 4
 422:	21 50       	subi	r18, 0x01	; 1
 424:	80 40       	sbci	r24, 0x00	; 0
 426:	90 40       	sbci	r25, 0x00	; 0
 428:	e1 f7       	brne	.-8      	; 0x422 <led_test_m_g+0x22>
 42a:	00 c0       	rjmp	.+0      	; 0x42c <led_test_m_g+0x2c>
 42c:	00 00       	nop
 42e:	08 95       	ret

00000430 <led_test_m_h>:
}


void led_test_m_h(void)
{
	PORTA |= 0b00000001;
 430:	d8 9a       	sbi	0x1b, 0	; 27
	transmit_string_UART0(" led_h ");
 432:	88 e5       	ldi	r24, 0x58	; 88
 434:	91 e0       	ldi	r25, 0x01	; 1
 436:	46 d0       	rcall	.+140    	; 0x4c4 <transmit_string_UART0>
 438:	2f ef       	ldi	r18, 0xFF	; 255
 43a:	81 ee       	ldi	r24, 0xE1	; 225
 43c:	94 e0       	ldi	r25, 0x04	; 4
 43e:	21 50       	subi	r18, 0x01	; 1
 440:	80 40       	sbci	r24, 0x00	; 0
 442:	90 40       	sbci	r25, 0x00	; 0
 444:	e1 f7       	brne	.-8      	; 0x43e <led_test_m_h+0xe>
 446:	00 c0       	rjmp	.+0      	; 0x448 <led_test_m_h+0x18>
 448:	00 00       	nop
	_delay_ms(200);
	PORTA &= 0b11111110;
 44a:	d8 98       	cbi	0x1b, 0	; 27
 44c:	2f ef       	ldi	r18, 0xFF	; 255
 44e:	81 ee       	ldi	r24, 0xE1	; 225
 450:	94 e0       	ldi	r25, 0x04	; 4
 452:	21 50       	subi	r18, 0x01	; 1
 454:	80 40       	sbci	r24, 0x00	; 0
 456:	90 40       	sbci	r25, 0x00	; 0
 458:	e1 f7       	brne	.-8      	; 0x452 <led_test_m_h+0x22>
 45a:	00 c0       	rjmp	.+0      	; 0x45c <led_test_m_h+0x2c>
 45c:	00 00       	nop
 45e:	08 95       	ret

00000460 <main>:
		// Loop 
		led_test_m_config();
		led_test_m_a();
		led_test_m_b();
		led_test_m_c();
		led_test_m_d();
 460:	1c d0       	rcall	.+56     	; 0x49a <init_UART0>
		led_test_m_e();
 462:	2a de       	rcall	.-940    	; 0xb8 <TWI_init_master>
		led_test_m_f();
 464:	73 de       	rcall	.-794    	; 0x14c <led_test_m_config>
		led_test_m_g();
 466:	3c df       	rcall	.-392    	; 0x2e0 <led_test_m_a>
 468:	53 df       	rcall	.-346    	; 0x310 <led_test_m_b>
		led_test_m_h();
 46a:	6a df       	rcall	.-300    	; 0x340 <led_test_m_c>
 46c:	81 df       	rcall	.-254    	; 0x370 <led_test_m_d>
		
		//uint8_t data= 0xFF;
		uint8_t data=receive_UART0();
 46e:	98 df       	rcall	.-208    	; 0x3a0 <led_test_m_e>
 470:	af df       	rcall	.-162    	; 0x3d0 <led_test_m_f>
 472:	c6 df       	rcall	.-116    	; 0x400 <led_test_m_g>
		TWI_start();
 474:	dd df       	rcall	.-70     	; 0x430 <led_test_m_h>
		TWI_write_address(0x20);
 476:	22 d0       	rcall	.+68     	; 0x4bc <receive_UART0>
 478:	c8 2f       	mov	r28, r24
		TWI_write_data(data);
 47a:	26 de       	rcall	.-948    	; 0xc8 <TWI_start>
 47c:	80 e2       	ldi	r24, 0x20	; 32
 47e:	32 de       	rcall	.-924    	; 0xe4 <TWI_write_address>
 480:	8c 2f       	mov	r24, r28
 482:	46 de       	rcall	.-884    	; 0x110 <TWI_write_data>
 484:	2f ef       	ldi	r18, 0xFF	; 255
 486:	80 e7       	ldi	r24, 0x70	; 112
 488:	92 e0       	ldi	r25, 0x02	; 2
 48a:	21 50       	subi	r18, 0x01	; 1
 48c:	80 40       	sbci	r24, 0x00	; 0
 48e:	90 40       	sbci	r25, 0x00	; 0
 490:	e1 f7       	brne	.-8      	; 0x48a <main+0x2a>
		_delay_ms(100);
		TWI_stop();
 492:	00 c0       	rjmp	.+0      	; 0x494 <main+0x34>
 494:	00 00       	nop
 496:	51 de       	rcall	.-862    	; 0x13a <TWI_stop>
 498:	e5 cf       	rjmp	.-54     	; 0x464 <main+0x4>

0000049a <init_UART0>:
    	while ( !(UCSR1A & (_BV(UDRE1))) );
    	///* Start transmission
    	UDR1 = buffer[i];
		i++;	
	}
}
 49a:	1b b8       	out	0x0b, r1	; 11
 49c:	1a b8       	out	0x0a, r1	; 10
 49e:	e5 e9       	ldi	r30, 0x95	; 149
 4a0:	f0 e0       	ldi	r31, 0x00	; 0
 4a2:	10 82       	st	Z, r1
 4a4:	59 9a       	sbi	0x0b, 1	; 11
 4a6:	8a b1       	in	r24, 0x0a	; 10
 4a8:	88 61       	ori	r24, 0x18	; 24
 4aa:	8a b9       	out	0x0a, r24	; 10
 4ac:	80 81       	ld	r24, Z
 4ae:	8e 60       	ori	r24, 0x0E	; 14
 4b0:	80 83       	st	Z, r24
 4b2:	87 e6       	ldi	r24, 0x67	; 103
 4b4:	89 b9       	out	0x09, r24	; 9
 4b6:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
 4ba:	08 95       	ret

000004bc <receive_UART0>:
 4bc:	5f 9b       	sbis	0x0b, 7	; 11
 4be:	fe cf       	rjmp	.-4      	; 0x4bc <receive_UART0>
 4c0:	8c b1       	in	r24, 0x0c	; 12
 4c2:	08 95       	ret

000004c4 <transmit_string_UART0>:


void transmit_string_UART0(char *buffer)
{
 4c4:	fc 01       	movw	r30, r24
  	uint16_t i = 0;
  	///Loop through the data
  	while(buffer[i] != '\0')
 4c6:	90 81       	ld	r25, Z
 4c8:	99 23       	and	r25, r25
 4ca:	39 f0       	breq	.+14     	; 0x4da <transmit_string_UART0+0x16>
 4cc:	31 96       	adiw	r30, 0x01	; 1
  	{
    	///* Wait for empty transmit buffer 
    	while ( !(UCSR0A & (_BV(UDRE0))) );
 4ce:	5d 9b       	sbis	0x0b, 5	; 11
 4d0:	fe cf       	rjmp	.-4      	; 0x4ce <transmit_string_UART0+0xa>
    	///* Start transmission
    	UDR0 = buffer[i];
 4d2:	9c b9       	out	0x0c, r25	; 12

void transmit_string_UART0(char *buffer)
{
  	uint16_t i = 0;
  	///Loop through the data
  	while(buffer[i] != '\0')
 4d4:	91 91       	ld	r25, Z+
 4d6:	91 11       	cpse	r25, r1
 4d8:	fa cf       	rjmp	.-12     	; 0x4ce <transmit_string_UART0+0xa>
 4da:	08 95       	ret

000004dc <_exit>:
 4dc:	f8 94       	cli

000004de <__stop_program>:
 4de:	ff cf       	rjmp	.-2      	; 0x4de <__stop_program>
